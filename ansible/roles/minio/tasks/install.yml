- name: Add Minio chart repo
  kubernetes.core.helm_repository:
    name: minio
    repo_url: "https://charts.min.io/"

- name: Create namespace
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ minio_namespace }}"
        labels:
          access.manetu.io/minio: "true" # grants access to itself

- name: Install Network Policy
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: minio-network-policy
      spec:
        podSelector: {}
        policyTypes:
          - Ingress
        ingress:
          - from:
              - namespaceSelector:
                  matchLabels:
                    access.manetu.io/minio: "true"

- name: Create root user credentials secret
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: minio-admin-creds
      type: Opaque
      data:
        rootUser: "{{ minio_root_user | b64encode }}"
        rootPassword: "{{ minio_password | b64encode }}"

- name: Create CA certificate
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: minio-ca-cert
      spec:
        isCA: true
        duration: "{{ minio_tls_duration }}"
        commonName: minio-ca-cert
        secretName: minio-ca-secret
        usage:
          - "cert sign"
        issuerRef:
          name: selfsigned-issuer
          kind: ClusterIssuer

- name: Create CA issuer
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: minio-ca-issuer
      spec:
        ca:
          secretName: minio-ca-secret

- name: Create Internal TLS certificate
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: minio-certificate
      spec:
        isCA: false
        duration: "{{ minio_tls_duration }}"
        commonName: minio-internal
        dnsNames:
          - "*.{{ minio_namespace }}.cluster.svc.local"
          - "*.minio-svc.{{ minio_namespace }}.svc.cluster.local"
          - "*.{{ minio_namespace }}"
          - "minio"
        secretName: minio-certificate
        usage:
          - "server auth"
          - "client auth"
        issuerRef:
          name: minio-ca-issuer
          kind: Issuer


- name: Get CA certificate
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ minio_namespace }}"
    name: minio-certificate
    wait: true
  register: minio_cert_json

- name: Create CA secret for minio
  kubernetes.core.k8s:
    state: present
    namespace: "{{ minio_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: minio-trusted-certs
      type: Opaque
      data:
        public.crt: "{{ minio_cert_json.resources[0].data['ca.crt']  }}"

- name: Install Minio
  kubernetes.core.helm:
    name: minio
    chart_ref: minio/minio
    chart_version: "{{ minio_version }}"
    release_namespace: "{{ minio_namespace }}"
    wait: true
    values:
      namespace: "{{ minio_namespace }}"
      replicas: "{{ minio_replicas }}"
      mode: "{{ minio_mode }}"
      existingSecret: minio-admin-creds
      tls:
        enabled: true
        certSecret: minio-certificate
        publicCrt: tls.crt
        privateKey: tls.key
      trustedCertsSecret: minio-trusted-certs
      persistence:
        enabled: "{{ storage_enabled | default('true') }}"
        storageClass: "{{ minio_persistence_storage_class }}"
        size: "{{ minio_persistence_size }}"
      resources: "{{ minio_resources }}"
      metrics:
        serviceMonitor:
          enabled: "{{ monitoring_enabled }}"
          includeNode: true

- name: Create Minio secrets for Manetu
  kubernetes.core.k8s:
    state: present
    namespace: "{{ manetu_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: s3-secrets
      type: Opaque
      stringData:
        S3_SECRETKEY: "{{ minio_password }}"
        S3_ACCESSKEY: "{{ minio_root_user }}"
        S3_BUCKETNAME: "{{ minio_manetu_internal_bucket }}"
        S3_CERTBUNDLE: "{{ minio_cert_json.resources[0].data['ca.crt'] | b64decode }}"
        S3_ENDPOINT: "https://minio.{{ minio_namespace }}:9000"
        S3_REGION: "us-east-1"
        S3_TLS: "true"
