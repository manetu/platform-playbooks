global:
  enabled: true
  tlsDisable: false
server:
  affinity: "{{ vault_affinity | from_yaml }}"
  nodeSelector: "{{ vault_nodeSelector | from_yaml }}"
  tolerations: "{{ vault_tolerations | from_yaml }}"
  dev:
    enabled: {{ vault_devmode | string | lower }}
    devRootToken: {{ vault_keys.root_token }}
  ha:
    enabled: true
    replicas: {{ vault_replicas }}
    raft:
      enabled: true
{% if vault_devmode is sameas false %}
      setNodeId: true
      config: |
        ui = true
        listener "tcp" {
          tls_disable = 0
          address = "[::]:8200"
          cluster_address = "[::]:8201"
          tls_cert_file = "/vault/userconfig/tls/tls.crt"
          tls_key_file  = "/vault/userconfig/tls/tls.key"
          tls_client_ca_file = "/vault/userconfig/tls/ca.crt"
          telemetry {
            unauthenticated_metrics_access = "true"
          }
        }
        storage "raft" {
          path = "/vault/data"
        }
        disable_mlock = true
        service_registration "kubernetes" {}
        telemetry {
          prometheus_retention_time = "30s"
          disable_hostname = true
        }
  dataStorage:
    enabled: {{ storage_enabled | default('true') | string | lower }}
    size: {{ vault_storage_size }}
    storageClass: {{ vault_storage_class }}
  extraEnvironmentVars:
    VAULT_CACERT: /vault/userconfig/tls/ca.crt
    VAULT_TLSCERT: /vault/userconfig/tls/tls.crt
    VAULT_TLSKEY: /vault/userconfig/tls/tls.key
  volumes:
    - name: vault-certificate
      secret:
        defaultMode: 420
        secretName: vault-certificate
  volumeMounts:
    - mountPath: /vault/userconfig/tls
      name: vault-certificate
      readOnly: true
{% endif %}
serverTelemetry:
  serviceMonitor:
    enabled: {{ monitoring_enabled | string | lower }}
ui:
  enabled: true
  serviceType: "LoadBalancer"
  externalPort: 8200
  serviceNodePort: null
