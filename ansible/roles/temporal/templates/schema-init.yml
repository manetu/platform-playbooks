apiVersion: batch/v1
kind: Job
metadata:
  name: temporal-schema-init
spec:
  template:
    metadata:
      name: temporal-schema-init
    spec:
      restartPolicy: OnFailure
      securityContext: {}
      serviceAccountName: default
      tolerations: {{ temporal_tolerations }}
      initContainers:
        - name: waitfor-visibilitystore
          image: {{ temporal_schema_image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              set -eux

              until curl $CURL_OPTS --silent --fail --user "$ES_USER:$ES_PWD" $ES_SCHEME://$ES_HOST:$ES_PORT 2>&1 > /dev/null; do echo waiting for elasticsearch to start; sleep 1; done;
          env:
            - name: CURL_OPTS
              value: -k  # FIXME
            - name: ES_SCHEME
              value: https
            - name: ES_HOST
              value: temporal-elasticsearch-es-http
            - name: ES_PORT
              value: "9200"
            - name: ES_USER
              value: elastic
            - name: ES_PWD
              valueFrom:
                secretKeyRef:
                  name: temporal-elasticsearch-credentials
                  key: password
      containers:
        - name: temporal-defaultstore-init
          image: {{ temporal_schema_image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              set -eux

              temporal-cassandra-tool create -k {{ temporal_cassandra_keyspace }} --replication-factor "{{ temporal_cassandra_replication_factor }}"
              temporal-cassandra-tool setup-schema -v "0.0"
              temporal-cassandra-tool update-schema --schema-dir /etc/temporal/schema/cassandra/temporal/versioned
          env:
            - name: CASSANDRA_HOST
              value: cassandra.manetu-cassandra
            - name: CASSANDRA_PORT
              value: "9042"
            - name: CASSANDRA_KEYSPACE
              value: {{ temporal_cassandra_keyspace }}
            - name: CASSANDRA_USER
              value: cassandra
            - name: CASSANDRA_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: temporal-cassandra-secret
                  key: password
            - name: CASSANDRA_ENABLE_TLS
              value: "true"
            - name: CASSANDRA_TLS_CA
              value: /etc/cassandra/ca.crt
            - name: CASSANDRA_TLS_DISABLE_HOST_VERIFICATION
              value: "true"
          volumeMounts:
            - mountPath: /etc/cassandra
              name: cassandra-secrets
              readOnly: true
          resources: {}
        - name: temporal-visibilitystore-init
          image: {{ temporal_schema_image }}
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |
              set -eux

              curl $CURL_OPTS -X PUT --fail --user "$ES_USER:$ES_PWD" $ES_SCHEME://$ES_HOST:$ES_PORT/_template/temporal_visibility_v1_template -H "Content-Type: application/json" --data-binary "@schema/elasticsearch/visibility/index_template_$ES_VERSION.json" --write-out "\n";

              curl $CURL_OPTS --head --fail --user "$ES_USER:$ES_PWD" $ES_SCHEME://$ES_HOST:$ES_PORT/$ES_VISIBILITY_INDEX ||
              curl $CURL_OPTS -X PUT --fail --user "$ES_USER:$ES_PWD" $ES_SCHEME://$ES_HOST:$ES_PORT/$ES_VISIBILITY_INDEX --write-out "\n";
          env:
            - name: CURL_OPTS
              value: -k  # FIXME
            - name: ES_SCHEME
              value: https
            - name: ES_HOST
              value: temporal-elasticsearch-es-http
            - name: ES_PORT
              value: "9200"
            - name: ES_USER
              value: elastic
            - name: ES_PWD
              valueFrom:
                secretKeyRef:
                  name: temporal-elasticsearch-credentials
                  key: password
            - name: ES_VERSION
              value: v7
            - name: ES_VISIBILITY_INDEX
              value: temporal_visibility_v1_dev
          #volumeMounts:
          #  - mountPath: /etc/elasticsearch
          #    name: temporal-elasticsearch-certs
          #    readOnly: true
          resources: {}
      volumes:
        - name: cassandra-secrets
          secret:
            secretName: temporal-cassandra-secret
            defaultMode: 420
            items:
              - key: ca.crt
                path: ca.crt
