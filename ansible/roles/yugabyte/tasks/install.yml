- name: Add Yugabyte chart repo
  kubernetes.core.helm_repository:
    name: yugabytedb
    repo_url: "https://charts.yugabyte.com"

- name: Create namespace
  kubernetes.core.k8s:
    state: present
    namespace: "{{ yugabyte_namespace }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ yugabyte_namespace }}"
        labels:
          access.manetu.io/yugabyte: "true"                     # grants access to itself

# account-migrate fails with this enabled
#
#- name: Install Network Policy
#  kubernetes.core.k8s:
#    state: present
#    namespace: "{{ yugabyte_namespace }}"
#    definition:
#      apiVersion: networking.k8s.io/v1
#      kind: NetworkPolicy
#      metadata:
#        name: yugabyte-network-policy
#      spec:
#        podSelector: {}
#        policyTypes:
#          - Ingress
#        ingress:
#          - from:
#              - namespaceSelector:
#                  matchLabels:
#                    access.manetu.io/yugabyte: "true"

- name: Create CA certificate
  when: yugabyte_tls_enabled
  kubernetes.core.k8s:
    state: present
    namespace: "{{ yugabyte_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: yugabyte-ca-cert
      spec:
        isCA: true
        duration: "{{ yugabyte_tls_duration }}"
        commonName: yugabyte-ca-cert
        secretName: yugabyte-ca-secret
        usage:
          - "cert sign"
        issuerRef:
          name: selfsigned-issuer
          kind: ClusterIssuer

- name: Create CA issuer
  when: yugabyte_tls_enabled
  kubernetes.core.k8s:
    state: present
    namespace: "{{ yugabyte_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: yugabyte-ca-issuer
      spec:
        ca:
          secretName: yugabyte-ca-secret

- name: Install Yugabyte
  kubernetes.core.helm:
    name: yugabyte
    chart_ref: yugabytedb/yugabyte
    chart_version: "{{ yugabyte_version }}"
    release_namespace: "{{ yugabyte_namespace }}"
    wait: true
    values:
      master:
        tolerations: "{{ yugabyte_master_tolerations | from_yaml }}"
        memoryLimitHardPercentage: 100
      tserver:
        tolerations: "{{ yugabyte_tserver_tolerations | from_yaml }}"
        memoryLimitHardPercentage: 100
      replicas:
        master: "{{ yugabyte_master_replicas }}"
        tserver: "{{ yugabyte_tserver_replicas }}"
      storage:
        ephemeral: "{{ not storage_enabled | default('false') }}"
        master:
          count: 1
          size: "{{ yugabyte_master_storage_size }}"
          storageClass: "{{ yugabyte_master_storage_class }}"
        tserver:
          count: 1
          size: "{{ yugabyte_tserver_storage_size }}"
          storageClass: "{{ yugabyte_tserver_storage_class }}"
      enableLoadBalancer: "{{ yugabyte_loadbalancer }}"
      resource: "{{ yugabyte_resources | from_yaml }}"
      oldNamingStyle: false
      tls:
        enabled: "{{ yugabyte_tls_enabled }}"
        nodeToNode: "{{ yugabyte_tls_enabled }}"
        clientToServer: "{{ yugabyte_tls_enabled }}"
        insecure: false    # disallow any service with unencrypted communication
        certManager:
          enabled: "{{ yugabyte_tls_enabled }}"
          bootstrapSelfsigned: false
          issuer: yugabyte-ca-issuer
          certificates:
            duration: "{{yugabyte_tls_duration}}"
      gflags:
        tserver:
          use_cassandra_authentication: "{{ yugabyte_cql_auth_enabled }}"
          ysql_enable_auth: true
          ysql_pg_conf_csv: password_encryption=scram-sha-256
      serviceMonitor:
        enabled: "{{ monitoring_enabled }}"
        interval: 10s
        extraLabels: "{{ prometheus_monitor_labels | from_yaml }}"

- name: Wait for yb-masters
  kubernetes.core.k8s_info:
    kind: Pod
    namespace: "{{ yugabyte_namespace }}"
    name: "{{ 'yugabyte-yb-master-' + item|string }}"
    field_selectors:
      - status.phase=Running
    wait: true
  loop: "{{ range(0, yugabyte_master_replicas) }}"

- name: Copy YCQL script to cluster
  when: yugabyte_cql_auth_enabled
  kubernetes.core.k8s_cp:
    namespace: "{{ yugabyte_namespace }}"
    pod:  yugabyte-yb-master-0
    container: yb-master
    content: "{{ lookup('template', 'update-ycql-password.sh') }}"
    remote_path: /tmp/update-ycql-password.sh

- name: Set YCQL password
  when: yugabyte_cql_auth_enabled
  kubernetes.core.k8s_exec:
    namespace: "{{ yugabyte_namespace }}"
    pod: yugabyte-yb-master-0
    container: yb-master
    command: sh /tmp/update-ycql-password.sh {{ yugabyte_password }}
  register: result
  failed_when: result.rc != 0 and result.rc != 2
  retries: 18
  delay: 5
  until: result is not failed

- name: Copy YSQL script to cluster
  kubernetes.core.k8s_cp:
    namespace: "{{ yugabyte_namespace }}"
    pod:  yugabyte-yb-tserver-0
    container: yb-tserver
    content: "{{ lookup('template', 'update-ysql-password.sh') }}"
    remote_path: /tmp/update-ysql-password.sh

- name: Set YSQL password
  kubernetes.core.k8s_exec:
    namespace: "{{ yugabyte_namespace }}"
    pod:  yugabyte-yb-tserver-0
    container: yb-tserver
    command: sh /tmp/update-ysql-password.sh {{ yugabyte_password }}
  register: result
  failed_when: result.rc != 0 and result.rc != 2
  retries: 18
  delay: 5
  until: result is not failed

- name: Get CA certificate
  when: yugabyte_tls_enabled
  kubernetes.core.k8s_info:
    kind: Secret
    namespace: "{{ yugabyte_namespace }}"
    name: yugabyte-client-tls
    wait: true
  register: client_cert

- name: Create Yugabyte secrets for Manetu
  kubernetes.core.k8s:
    state: present
    namespace: "{{ manetu_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: yugabyte-secrets
      type: Opaque
      data:
        YUGABYTE_TLS_CERT: "{{ client_cert.resources[0].data['ca.crt'] | default('') }}"
        YUGABYTE_USERNAME: "{{ yugabyte_cql_auth_enabled | ternary(('cassandra' | b64encode), '') }}"
        YUGABYTE_PASSWORD: "{{ yugabyte_cql_auth_enabled | ternary((yugabyte_password | b64encode), '') }}"
        YSQL_USERNAME: "{{'yugabyte' | b64encode }}"
        YSQL_PASSWORD: "{{ yugabyte_password | b64encode }}"

- name: Create Yugabyte configuration for Manetu
  kubernetes.core.k8s:
    state: present
    namespace: "{{ manetu_namespace }}"
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: yugabyte-config
      data:
        YUGABYTE_HOSTS: "{{ ('yugabyte-yb-tservers.' + yugabyte_namespace + '.svc.cluster.local') }}"
        YUGABYTE_PORT: "9042"
        YUGABYTE_TLS_ENABLED: "{{ yugabyte_tls_enabled | string | lower | quote }}"
        YSQL_PORT: "5433"
