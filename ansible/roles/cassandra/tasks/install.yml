- name: Add Cassandra chart repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"

- name: Create namespace
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ cassandra_namespace }}"
        labels:
          access.manetu.io/cassandra: "true"                     # grants access to itself

- name: Install Network Policy
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: networking.k8s.io/v1
      kind: NetworkPolicy
      metadata:
        name: cassandra-network-policy
      spec:
        podSelector: {}
        policyTypes:
          - Ingress
        ingress:
          - from:
              - namespaceSelector:
                  matchLabels:
                    access.manetu.io/cassandra: "true"

- name: Create admin credentials secret
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cassandra-admin-password
      type: Opaque
      data:
        cassandra-password: "{{ cassandra_password | b64encode }}"

- name: Create TLS stores secret
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: cassandra-tls-store-secrets
      type: Opaque
      data:
        keystore-password: "{{ cassandra_tls_store | b64encode }}"
        truststore-password: "{{ cassandra_tls_store | b64encode }}"

- name: Create CA certificate
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: cassandra-ca-cert
      spec:
        isCA: true
        duration: "{{ cassandra_tls_duration }}"
        commonName: cassandra-ca-cert
        secretName: cassandra-ca-secret
        usage:
          - "cert sign"
        issuerRef:
          name: selfsigned-issuer
          kind: ClusterIssuer

- name: Create CA issuer
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Issuer
      metadata:
        name: cassandra-ca-issuer
      spec:
        ca:
          secretName: cassandra-ca-secret

- name: Create Internal TLS certificate
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: cassandra-certificate
      spec:
        isCA: false
        duration: "{{ cassandra_tls_duration }}"
        commonName: cassandra-internal
        dnsNames:
          - "*.{{ cassandra_namespace }}.svc.cluster.local"
          - "*.{{ cassandra_namespace }}"
        secretName: cassandra-certificate
        usage:
          - "server auth"
          - "client auth"
        issuerRef:
          name: cassandra-ca-issuer
          kind: Issuer

- name: Create Client TLS certificate
  kubernetes.core.k8s:
    state: present
    namespace: "{{ cassandra_namespace }}"
    definition:
      apiVersion: cert-manager.io/v1
      kind: Certificate
      metadata:
        name: cassandra-client-certificate
      spec:
        isCA: false
        duration: "{{ cassandra_tls_duration }}"
        commonName: cassandra-client
        dnsNames:
          - "*"
        secretName: cassandra-client-certificate
        usage:
          - "client auth"
        issuerRef:
          name: cassandra-ca-issuer
          kind: Issuer

- name: Install Cassandra
  kubernetes.core.helm:
    name: cassandra
    chart_ref: bitnami/cassandra
    chart_version: "{{ cassandra_version }}"
    release_namespace: "{{ cassandra_namespace }}"
    values:
      tolerations: "{{ cassandra_tolerations | from_yaml }}"
      replicaCount: "{{ cassandra_replicas }}"
      persistence:
        enabled: "{{ storage_enabled | default('true') }}"
        size: "{{ cassandra_storage_size }}"
        storageClass: "{{ cassandra_storage_class }}"
      dbUser:
        user: "{{ cassandra_user }}"
        existingSecret:
          name: cassandra-admin-password
      resources: "{{ cassandra_resources }}"
      tls:
        internodeEncryption: all
        clientEncryption: true
        autoGenerated: true
        existingSecret: cassandra-certificate
        passwordsSecret: cassandra-tls-store-secrets
